class_name InvulnerabilityPickupResource
extends PickupResource

@export_range(0.0,5.0,0.1) var buff_duration = 5.0
var invulnerability_material = preload("res://scenes/shader/invulnerability_material.tres")
# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

func applyPickup(player:Player):
	var buff = player.get_node("InvulnerabilityBuff")
	if(buff):
		buff.wait_time = buff_duration
	else:
		var buff_timer = Timer.new()
		buff_timer.wait_time = buff_duration
		buff_timer.name = "InvulnerabilityBuff"
		player.add_child(buff_timer)
		for sprite in player.get_node("sprites").get_children():
			print(sprite.name)
			sprite.material = invulnerability_material
		player.find_child("umbrella_sprite",true).material = invulnerability_material
		buff_timer.start()
		buff_timer.timeout.connect(removeBuff.bindv([player]))
		delete_flag = true
	return false

static func removeBuff(player):
	print("Buff over")
	player.get_node("InvulnerabilityBuff").queue_free()
	for sprite in player.find_child("sprites").get_children():
		print(sprite.name)
		sprite.material = null
	pass
# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	pass
